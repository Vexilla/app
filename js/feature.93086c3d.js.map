{"version":3,"sources":["webpack:///./src/views/Feature.vue?c593","webpack:///./src/views/Feature.vue","webpack:///./src/views/Feature.vue?d57a","webpack:///./src/views/Feature.vue?b1e3"],"names":["class","feature","name","type","value","environments","environment","key","setToggle","toggled","getFeatureSettings","handleToggleChange","$event","target","checked","step","min","max","seed","id","handleSeedChange","randomizeSeed","handleThresholdChange","data","methods","randomValue","Math","floor","random","this","$store","getters","dispatch","settings","updateType","previous","current","created","$router","replace","updated","activated","computed","$route","params","watch","oldFeature","oldType","components","Toggle","render"],"mappings":"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","file":"js/feature.93086c3d.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Feature.vue?vue&type=style&index=0&id=40c63cc0&lang=postcss\"","<template>\n  <div class=\"feature-page\">\n    <h1 class=\"title\">Feature: {{ feature?.name }}</h1>\n\n    <div class=\"field-row\">\n      <label>Feature Type</label>\n      <div class=\"feature-type-options radio-options\">\n        <label>\n          <input v-model=\"type\" type=\"radio\" name=\"type\" value=\"toggle\" />\n          Toggle\n        </label>\n\n        <label>\n          <input v-model=\"type\" type=\"radio\" name=\"type\" value=\"gradual\" />\n          Gradual\n        </label>\n\n        <label>\n          <input v-model=\"type\" type=\"radio\" name=\"type\" value=\"selective\" />\n          Selective\n        </label>\n      </div>\n    </div>\n    <div class=\"environments\">\n      <h2>Environments</h2>\n      <div\n        class=\"environment form-section\"\n        :class=\"type === 'toggle' ? 'inline-field' : ''\"\n        v-for=\"environment in environments\"\n        :key=\"environment.name\"\n      >\n        <h3>{{ environment.name }}</h3>\n        <div v-if=\"type === 'toggle'\">\n          <div class=\"toggle-wrapper field\">\n            <button class=\"text-button\" @click=\"setToggle(environment, false)\">\n              Off\n            </button>\n            <Toggle\n              :toggled=\"getFeatureSettings(environment)?.value\"\n              @change=\"handleToggleChange(environment, $event.target.checked)\"\n            />\n            <button class=\"text-button\" @click=\"setToggle(environment, true)\">\n              On\n            </button>\n          </div>\n        </div>\n        <div v-if=\"type === 'gradual'\">\n          <div class=\"seed-wrapper\">\n            <div class=\"row\">\n              <h4>Seed:</h4>\n              <input\n                class=\"feature-input\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0.01\"\n                max=\".099\"\n                :value=\"getFeatureSettings(environment)?.seed\"\n              />\n            </div>\n            <div class=\"row\">\n              <label class=\"slider-label\">.01</label>\n              <input\n                class=\"feature-slider left\"\n                id=\"{{environment}}-seed\"\n                name=\"{{environment}}-seed\"\n                :value=\"getFeatureSettings(environment)?.seed * 100\"\n                type=\"range\"\n                min=\"1\"\n                max=\"99\"\n                step=\"1\"\n                @input=\"handleSeedChange(environment, $event.target.value)\"\n              />\n              <label class=\"slider-label\">.99</label>\n              <button class=\"right mini\" @click=\"randomizeSeed(environment)\">\n                Randomize\n              </button>\n            </div>\n          </div>\n          <hr />\n          <div class=\"threshold-wrapper\">\n            <div class=\"row\">\n              <h4>Threshhold:</h4>\n              <input\n                class=\"feature-input\"\n                type=\"number\"\n                step=\"1\"\n                min=\"0\"\n                max=\"100\"\n                :value=\"getFeatureSettings(environment)?.value\"\n              />\n            </div>\n            <div class=\"row\">\n              <label class=\"slider-label\">1</label>\n              <input\n                id=\"{{environment}}-threshold\"\n                class=\"feature-slider\"\n                name=\"{{environment}}-threshold\"\n                :value=\"getFeatureSettings(environment)?.value\"\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                step=\"1\"\n                @input=\"handleThresholdChange(environment, $event.target.value)\"\n              />\n              <label class=\"slider-label\">100</label>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"type === 'selective'\">selective</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"postcss\">\n.feature-page {\n  @apply max-w-screen-sm m-auto;\n}\n\n.title {\n  @apply text-left;\n}\n\n.feature-type-options {\n}\n\n.environments {\n  & > h2 {\n    @apply mb-0;\n  }\n}\n\n.environment {\n  & h3 {\n    @apply mt-0 w-24;\n  }\n}\n</style>\n\n<script lang=\"ts\">\nimport { Icon, InlineIcon } from \"@iconify/vue\";\nimport flagIcon from \"@iconify-icons/dashicons/flag\";\nimport { defineComponent } from \"vue\";\nimport Toggle from \"@/components/Toggle.vue\";\n\nimport isEqual from \"lodash/fp/isEqual\";\nimport {\n  Environment,\n  Feature,\n  VexillaFeature,\n  VexillaFeatureTypeString\n} from \"@/store/app\";\nimport { mapState } from \"vuex\";\n\nexport default defineComponent({\n  name: \"Feature\",\n  data() {\n    return {\n      type: \"toggle\"\n    };\n  },\n  methods: {\n    randomizeSeed(environment: Environment) {\n      const randomValue = Math.floor(Math.random() * 100);\n      this.handleSeedChange(environment, randomValue);\n    },\n    getFeatureSettings(environment: Environment) {\n      return this.$store.getters[\"app/getFeatureSettings\"](\n        this.feature,\n        environment,\n        this.type\n      );\n    },\n    handleToggleChange(environment: Environment, toggled: boolean) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          value: toggled\n        } as VexillaFeature\n      });\n    },\n    setToggle(environment: Environment, toggled: boolean) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          value: toggled\n        } as VexillaFeature\n      });\n    },\n    handleSeedChange(environment: Environment, value: number) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          seed: +value / 100\n        } as VexillaFeature\n      });\n    },\n    handleThresholdChange(environment: Environment, value: number) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          value: +value\n        } as VexillaFeature\n      });\n    },\n    updateType(type: string) {\n      this.$store.dispatch(\"app/editFeature\", {\n        previous: this.feature,\n        current: {\n          ...this.feature,\n          type\n        }\n      });\n    }\n  },\n  created() {\n    if (!this.feature) {\n      this.$router.replace(\"/\");\n      this.type = this.feature?.type;\n    } else {\n      this.type = this.feature?.type;\n    }\n  },\n  updated() {\n    this.type = this.feature?.type;\n  },\n  activated() {\n    this.type = this.feature?.type;\n  },\n  computed: {\n    ...mapState(\"app\", [\"environments\", \"featureSettings\"]),\n    feature() {\n      return this.$store.getters[\"app/featureByName\"](this.$route.params.name);\n    }\n  },\n  watch: {\n    feature(feature: Feature, oldFeature: Feature) {\n      this.type = feature?.type;\n    },\n    type(type, oldType) {\n      this.updateType(type);\n    }\n  },\n  components: {\n    Toggle\n  }\n});\n</script>\n","\nimport { Icon, InlineIcon } from \"@iconify/vue\";\nimport flagIcon from \"@iconify-icons/dashicons/flag\";\nimport { defineComponent } from \"vue\";\nimport Toggle from \"@/components/Toggle.vue\";\n\nimport isEqual from \"lodash/fp/isEqual\";\nimport {\n  Environment,\n  Feature,\n  VexillaFeature,\n  VexillaFeatureTypeString\n} from \"@/store/app\";\nimport { mapState } from \"vuex\";\n\nexport default defineComponent({\n  name: \"Feature\",\n  data() {\n    return {\n      type: \"toggle\"\n    };\n  },\n  methods: {\n    randomizeSeed(environment: Environment) {\n      const randomValue = Math.floor(Math.random() * 100);\n      this.handleSeedChange(environment, randomValue);\n    },\n    getFeatureSettings(environment: Environment) {\n      return this.$store.getters[\"app/getFeatureSettings\"](\n        this.feature,\n        environment,\n        this.type\n      );\n    },\n    handleToggleChange(environment: Environment, toggled: boolean) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          value: toggled\n        } as VexillaFeature\n      });\n    },\n    setToggle(environment: Environment, toggled: boolean) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          value: toggled\n        } as VexillaFeature\n      });\n    },\n    handleSeedChange(environment: Environment, value: number) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          seed: +value / 100\n        } as VexillaFeature\n      });\n    },\n    handleThresholdChange(environment: Environment, value: number) {\n      this.$store.dispatch(\"app/setFeatureSettings\", {\n        feature: this.feature,\n        environment,\n        type: this.type,\n        settings: {\n          value: +value\n        } as VexillaFeature\n      });\n    },\n    updateType(type: string) {\n      this.$store.dispatch(\"app/editFeature\", {\n        previous: this.feature,\n        current: {\n          ...this.feature,\n          type\n        }\n      });\n    }\n  },\n  created() {\n    if (!this.feature) {\n      this.$router.replace(\"/\");\n      this.type = this.feature?.type;\n    } else {\n      this.type = this.feature?.type;\n    }\n  },\n  updated() {\n    this.type = this.feature?.type;\n  },\n  activated() {\n    this.type = this.feature?.type;\n  },\n  computed: {\n    ...mapState(\"app\", [\"environments\", \"featureSettings\"]),\n    feature() {\n      return this.$store.getters[\"app/featureByName\"](this.$route.params.name);\n    }\n  },\n  watch: {\n    feature(feature: Feature, oldFeature: Feature) {\n      this.type = feature?.type;\n    },\n    type(type, oldType) {\n      this.updateType(type);\n    }\n  },\n  components: {\n    Toggle\n  }\n});\n","import { render } from \"./Feature.vue?vue&type=template&id=40c63cc0\"\nimport script from \"./Feature.vue?vue&type=script&lang=ts\"\nexport * from \"./Feature.vue?vue&type=script&lang=ts\"\n\nimport \"./Feature.vue?vue&type=style&index=0&id=40c63cc0&lang=postcss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}